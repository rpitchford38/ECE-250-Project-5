new
// shorter path through other nodes
insert 0 1 10.0
insert 0 2 2.0
insert 2 1 2.0
distance 0 1 4.0
delete
// Correctly add the first insertion
new: 10
insert 0 1 5.0
insert 0 2 1.0
insert 0 3 1.0
insert 0 4 1.0
insert 0 5 1.0
insert 0 6 1.0
insert 0 7 1.0
degree 0 7
insert 7 5 1.0
distance 0 1 5.0
delete
// Add a bunch on one vertex, and still find smallest path to target node
new: 10
insert 0 1 5.0
insert 0 2 1.0
insert 0 3 1.0
insert 0 4 1.0
insert 0 5 1.0
insert 0 6 1.0
insert 0 7 1.0
insert 7 1 1.0
distance 0 1 2.0
delete
// Infinity distance
new: 10
insert 0 1 5.0
insert 0 2 1.0
insert 0 3 1.0
insert 0 4 1.0
insert 0 5 1.0
insert 0 6 1.0
insert 0 7 1.0
insert 7 1 1.0
~connected 6 9
delete
// Back track for distance
new: 10
insert 0 1 5.0
insert 0 2 1.0
insert 0 3 1.0
insert 0 4 1.0
insert 0 5 1.0
insert 0 6 1.0
insert 0 7 1.0
insert 7 1 1.0
distance 6 7 2
delete
// Sum of distances is important for shortest path, keep longer start bc its shorter
new: 10
insert 0 1 5.0
insert 0 2 1.0
insert 2 3 1.0
insert 3 4 1.0
insert 4 5 1.0
insert 5 6 1.0
insert 6 1 1.0
distance 0 1 5.0
delete
// Sum of distances is important for shortest path, take more nodes bc its shorter
new: 10
insert 0 1 7.0
insert 0 2 1.0
insert 2 3 1.0
insert 3 4 1.0
insert 4 5 1.0
insert 5 6 1.0
insert 6 1 1.0
distance 0 1 6.0
delete
// breaks if you don't replace properly
new
insert 0 1 10.0
insert 0 2 2.0
insert 2 1 2.0
distance 0 1 4.0
insert 0 1 5.0
insert 0 2 1.0
insert 0 3 1.0
delete
// replace the edge
new
insert 0 1 5.0
insert 0 1 1.0
distance 0 1 1.0
delete
// be able to create of a smaller size
new: 3
insert 0 1 2
insert 2 1 4
insert! 3 7 2
insert! -1 -2 3
distance 2 1 4
delete
summary
exit